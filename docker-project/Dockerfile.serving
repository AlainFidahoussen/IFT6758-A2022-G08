# To build a container, you will use the docker build command
# https://docs.docker.com/engine/reference/commandline/build/
#
#   docker build -t <IMAGE TAG> -f Dockerfile.serving .
#   docker build -t <IMAGE TAG> -f Dockerfile.jupyter .
#


# https://docs.docker.com/engine/reference/builder/#from
# You shouldn't need to change this
FROM python:3.7

# https://docs.docker.com/engine/reference/builder/#workdir
# Create and cd into /code as your working directory
WORKDIR /code

#
# Install librairies using pip
# https://docs.docker.com/engine/reference/builder/#copy
# COPY requirements.txt ./
ADD ift6758 ./ift6758

#
# Run a shell command (tip: chain shell commands with && rather than multiple RUN commands)
# https://docs.docker.com/engine/reference/builder/#run
#
# RUN pip install -r requirements.txt
RUN  pip install --upgrade pip && pip install -e ift6758 && pip install -r ift6758/requirements.txt

#
# Add a file or directory
# https://docs.docker.com/engine/reference/builder/#add
#
ADD ./serving/app2.py ./app.py


# Set an environment variable:
# https://docs.docker.com/engine/reference/builder/#env
#
ENV NHL_DATA_DIR=./data
#
# Expose a port
# https://docs.docker.com/engine/reference/builder/#port
#
EXPOSE 6758
#
# Provide default command for executing container
# https://docs.docker.com/engine/reference/builder/#cmd
#
CMD gunicorn --bind 0.0.0.0:6758 app:app



# TODO: add code, optionally a default model if you want 


# TODO: install libs


# TODO: expose ports (or do this in docker-compose)


# TODO: specify default command - this is not required because you can always specify the command
# either with the docker run command or in the docker-compose file
